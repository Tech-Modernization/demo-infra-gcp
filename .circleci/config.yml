version: 2
references:
  workspace_root: &workspace_root /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root
jobs:
  validate:
    docker:
      - image: hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Validating terraform files
          command: |
            cd terraform
            terraform init -backend=false
            terraform validate
  build:
    docker:
      - image: japrakash/cci-terraform-light-gcloudsdk:0.0.1
    steps:
      - *attach_workspace
      - checkout
      - run:
          name: Building Cloud Infra
          command: |
            set -exu
            mkdir -p /tmp/workspace/output
            cd terraform
            cat <<EOF > creds.json
            $GCP_CREDS
            EOF
            export GOOGLE_APPLICATION_CREDENTIALS="creds.json"
            export TF_VAR_project_id="${GCP_PROJECT}"
            export TF_VAR_dns_name="${DNS_NAME}"
            gcloud auth activate-service-account --key-file=creds.json
            cat backend.tf
            terraform init
            terraform plan -out "tf.plan"
            terraform apply -auto-approve "tf.plan"
            terraform output cluster_static_ip > /tmp/workspace/output/output.log
            rm "tf.plan"
            rm creds.json
      - persist_to_workspace: # store the built files into the workspace for other jobs.
          root: *workspace_root
          paths:
            - output
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - *attach_workspace
      - checkout
      - run:
          name: Install envsubst
          command: |
            apt-get install gettext-base
      - run:
          name: Deploy K8s yaml
          command: |
            echo $GCP_CREDS | gcloud auth activate-service-account --key-file=-
            export STATIC_IP=`cat /tmp/workspace/output/output.log`
            gcloud --quiet config set project ${GCP_PROJECT}
            gcloud --quiet config set compute/zone ${CLUSTER_REGION}
            gcloud container clusters get-credentials ${CLUSTER_NAME}
            cat k8s/*.yaml | envsubst | kubectl apply -f -

workflows:
  version: 2
  validate-build-deploy:
    jobs:
      - validate
      - checkov:
          requires:
            - validate
      - build:
          requires:
            - validate
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
